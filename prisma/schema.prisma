// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String
  email    String @unique
  password String
  role     Role   @default(BUYER)
  avatar   Bytes?

  Shop Shop?

  CartItem CartItem[]

  OrderItem OrderItem?

  @@map("users")
}

enum Role {
  BUYER
  RETAILER
  ADMIN
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  price       Float
  stock       Int     @default(0)
  description String? @db.LongText
  picture     Bytes?

  shop   Shop @relation(fields: [shopId], references: [id])
  shopId Int

  CartItem CartItem[]

  @@map("products")
}

model Shop {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String? @db.LongText
  picture     Bytes?

  Product Product[]

  retailer   User @relation(fields: [retailerId], references: [id])
  retailerId Int  @unique

  CartItem CartItem[]

  OrderItem OrderItem[]
  @@map("shop")
}

model CartItem {
  id Int @id @default(autoincrement())

  buyer   User @relation(fields: [buyerId], references: [id])
  buyerId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(1)

  retailer   Shop @relation(fields: [retailerId], references: [id])
  retailerId Int

  OrderItem   OrderItem? @relation(fields: [orderItemId], references: [id])
  orderItemId Int?

  @@map("carts")
}

model OrderItem {
  id Int @id @default(autoincrement())

  buyer   User @relation(fields: [buyerId], references: [id])
  buyerId Int  @unique

  items CartItem[]

  retailer   Shop @relation(fields: [retailerId], references: [id])
  retailerId Int

  total Float

  @@map("orders")
}

model Images {
  id   Int    @id @default(autoincrement())
  name String

  @@map("images")
}
